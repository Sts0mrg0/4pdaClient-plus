apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
//apply plugin: 'me.tatarka.retrolambda'

repositories {
    maven { url "https://jitpack.io" }
    mavenCentral()
}

android {
    compileSdkVersion 27
    useLibrary 'org.apache.http.legacy'

    def appVersionCode = 616
    def appVersionName = "3.5.2.9"


    defaultConfig {
        applicationId 'org.softeg.slartus.forpdaplus'
        minSdkVersion 15

        //noinspection OldTargetApi
        targetSdkVersion 23
        versionCode appVersionCode
        versionName appVersionName
        vectorDrawables.useSupportLibrary = true
    }
    dexOptions {
        dexInProcess = true
        preDexLibraries = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    signingConfigs {
        release {
            storeFile file("keystore.key")
            keyAlias "4pdakey"
            keyPassword "xjFX06dR7HGj6RvgHUtPQTEJVeuuMOgY"
            storePassword "xjFX06dR7HGj6RvgHUtPQTEJVeuuMOgY"
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
    flavorDimensions "wtf"
    productFlavors {
        def defaultSigningVariable = signingConfigs.release
        rel {
            applicationId 'org.softeg.slartus.forpdaplus'
            versionCode appVersionCode
            versionName appVersionName
            signingConfig defaultSigningVariable
            dimension "wtf"
        }
        beta {
            applicationId 'org.softeg.slartus.forpdaplus.beta'
            versionCode 625// у беты свой номер, чтобы не инкрементить релизный
            versionName "${appVersionName}beta" //beta - С МАЛЕНЬКОЙ БУКВЫ ПЛЗ.))
            signingConfig defaultSigningVariable
            dimension "wtf"
        }
    }
//    applicationVariants.all { variant ->
//        variant.outputs.each { output ->
//            def fileNaming = "ForPDA"
//            def outputFile = output.outputFile
//            if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                output.outputFile = new File(getProject().getRootDir(), "${fileNaming}_${appVersionName}-${variant.buildType.name}.apk")
//            }
//        }
//    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def fileNaming = "ForPDA"
            def vCode = variant.versionCode
            if (vCode < 10)
                vCode = "0" + vCode
            def flavor = variant.productFlavors[0]
            if (flavor.name == "beta")
                outputFileName = "${fileNaming}_${appVersionName}_c${vCode}-${flavor.name}.apk"
            else
                outputFileName = "${fileNaming}_${appVersionName}-${variant.buildType.name}.apk"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        disable 'RestrictedApi'
        checkReleaseBuilds false
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
    }
}
dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    api project(':forpdacommon')
    api project(':forpdanotifyservice')
    api project(':4pdasources')
    api "com.android.support:design:$rootProject.supportLibraryVersion"
    api "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    api "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    api "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    api 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    api 'com.readystatesoftware.sqliteasset:sqliteassethelper:2.0.1'
    api 'com.github.chrisbanes.photoview:library:1.2.4'
    api 'com.nineoldandroids:library:2.4.0'
    api 'com.afollestad.material-dialogs:core:0.9.0.2'
    api 'de.hdodenhof:circleimageview:2.0.0'
    api 'com.dmitriy-tarasov:android-intents:1.1.0'
    api 'com.squareup.picasso:picasso:2.5.2'
    api 'ch.acra:acra:4.9.0'
    api 'com.google.code.gson:gson:2.7'
    api 'com.squareup.okhttp3:okhttp:3.12.0'
    api 'com.squareup.okhttp3:okhttp-urlconnection:3.10.0'
    api 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    api 'com.github.armcha:Vertical-Intro:2.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
